{"version":3,"file":"index.js","sources":["../index.ts","../test.ts"],"sourcesContent":["/// <reference lib=\"es2015\" />\r\n/// <reference lib=\"esnext.asynciterable\" />\r\nimport { getBase64 } from \"lib-bee\";\r\n\r\nconst buff = require(\"buffer/\").Buffer;\r\n\r\nexport function convertToBase64(str: string): string {\r\n  return getBase64(str);\r\n}\r\n\r\nexport function convertToHex(str: string): string {\r\n  const bufferConversionResult = buff.from(str, \"ascii\");\r\n  console.log(\"lib-aaa printing hex for buffer - '\" + str + \"', 'ascii'\");\r\n  const res: string = bufferConversionResult.toString(\"hex\");\r\n  console.log(res);\r\n  return res;\r\n  // should print for 'hello world': 68656c6c6f20776f726c64\r\n}\r\n","import * as index from \"./index\";\r\nvar chai = require('chai');  \r\nvar expect = chai.expect; \r\ndescribe('evaluate',function(){\r\n\r\n    it('hex',function(){\r\n        expect(index.convertToHex('hello world')).toBe('68656c6c6f20776f726c64');\r\n    });\r\n\r\n    it('base64',function(){\r\n        expect(index.convertToBase64('hello world')).toBe('aGVsbG8gd29ybGQ=');\r\n    });\r\n});"],"names":["getBase64","index.convertToHex","index.convertToBase64"],"mappings":";;;;;;IAAA;AACA,IAGA,MAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;AAEvC,aAAgB,eAAe,CAAC,GAAW;QACzC,OAAOA,gBAAS,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;AAED,aAAgB,YAAY,CAAC,GAAW;QACtC,MAAM,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC;QACxE,MAAM,GAAG,GAAW,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,GAAG,CAAC;;IAEb,CAAC;;IChBD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzB,QAAQ,CAAC,UAAU,EAAC;QAEhB,EAAE,CAAC,KAAK,EAAC;YACL,MAAM,CAACC,YAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;SAC5E,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,EAAC;YACR,MAAM,CAACC,eAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;;;;"}